name: Build And Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    types: [review_requested]

jobs:
  build_on_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: windows-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            windows-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install --prefer-offline --legacy-peer-deps

      - name: Build
        run: npm run package

      - name: List release folder
        run: dir release/build/

      - name: Upload Windows Artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            release/build/*.exe
            release/build/*.msi
            release/build/*.appx
            release/build/*-setup.exe

  build_on_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ubuntu-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ubuntu-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install --prefer-offline --legacy-peer-deps

      - name: Build the Package
        run: npm run package

      - name: List release folder
        run: ls -la release/build/

      - name: Upload Ubuntu Artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-artifacts
          path: |
            release/build/*.deb
            release/build/*.snap
            release/build/*.AppImage

  build_on_mac:
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: mac-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            mac-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install --prefer-offline --legacy-peer-deps

      - name: Build the Package
        run: npm run package

      - name: List release folder
        run: ls -la release/build/

      - name: Upload macOS Artifacts (Non-Tag Builds)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            release/build/*.dmg

  create_release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build_on_windows, build_on_ubuntu, build_on_mac]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: windows-artifacts/

      - name: Download Ubuntu Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-artifacts
          path: ubuntu-artifacts/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
          path: macos-artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: true
          files: |
            windows-artifacts/**
            ubuntu-artifacts/**
            macos-artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
