name: Update Flatpak Manifest

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main repo
      uses: actions/checkout@v4

    - name: Checkout target repo
      uses: actions/checkout@v4
      with:
        repository: lkavindu199/test_libre
        token: ${{ secrets.TARGET_REPO_TOKEN }}
        path: target-repo

    - name: Get latest commit
      id: commit-info
      run: |
        echo "latest_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "Latest commit: ${{ steps.commit-info.outputs.latest_commit }}"

    - name: Update manifest - find and replace any commit
      run: |
        cd target-repo

        python3 << "EOF"
        # Read the entire file
        with open('rocks.poopjournal.librelinkupdesktop.yml', 'r') as f:
            lines = f.readlines()

        # Find and update the specific git source section
        in_git_section = False
        updated = False

        for i, line in enumerate(lines):
            # Look for the git URL line to identify the right section
            if 'url: https://github.com/deviitorinc/LibreLinkUpDesktop.git' in line:
                in_git_section = True
                # Update the URL
                lines[i] = line.replace(
                    'url: https://github.com/deviitorinc/LibreLinkUpDesktop.git',
                    'url: https://github.com/lkavindu199/LibreLinkUpDesktop_new1.git'
                )
                print("✅ Updated URL")

            # If we're in the git section, look for branch and commit lines
            elif in_git_section:
                if 'branch:' in line:
                    lines[i] = '        branch: main\n'
                    print("✅ Updated branch to main")

                elif 'commit:' in line:
                    # Replace ANY commit hash with the new one
                    lines[i] = f'        commit: ${{{{ steps.commit-info.outputs.latest_commit }}}}\n'
                    print("✅ Updated commit ID")
                    updated = True
                    in_git_section = False  # Reset after updating commit

        if not updated:
            print("⚠️ Could not find commit line to update")

        # Write back
        with open('rocks.poopjournal.librelinkupdesktop.yml', 'w') as f:
            f.writelines(lines)

        print("✅ File update completed")
        EOF

    - name: Show what changed
      run: |
        cd target-repo
        echo "=== Updated section ==="
        grep -A 10 -B 5 "lkavindu199" rocks.poopjournal.librelinkupdesktop.yml

    - name: Commit and push changes
      run: |
        cd target-repo
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        git add rocks.poopjournal.librelinkupdesktop.yml

        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: Update manifest with latest commit ${{ steps.commit-info.outputs.latest_commit }}"
          git push
          echo "✅ Successfully updated and pushed manifest"
        fi
